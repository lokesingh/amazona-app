{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_RESET, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.mesage ? error.response.data.mesage : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/hp/Project/ecommerec-app/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_RESET","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","mesage","message","detailsOrder","orderId","get","ORDER_DETAILS_SUCCESS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,qBANF,QAOO,6BAPP;AAQA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAMC,QAAN,EAAeC,QAAf,KAA0B;AAC5DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAET,oBAAP;AAA6BU,IAAAA,OAAO,EAAEJ;AAAtC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AACFK,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AADV,QAEFJ,QAAQ,EAFZ;AAGA,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,IAAN,CAAW,aAAX,EAAyBR,KAAzB,EAA+B;AAChDS,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADpC;AADwC,KAA/B,CAArB;AAKAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP,oBAAN;AAA4BQ,MAAAA,OAAO,EAACG,IAAI,CAACP;AAAzC,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAoB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,GAZD,CAYE,OAAMC,KAAN,EAAa;AACXb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACV,iBADA;AAELW,MAAAA,OAAO,EACHU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GAA+CF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAnE,GAA4EF,KAAK,CAACG;AAHjF,KAAD,CAAR;AAKH;AACJ,CArBM;AAuBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAW,OAAMlB,QAAN,EAAeC,QAAf,KAA0B;AAC7DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEL,qBAAP;AAA6BM,IAAAA,OAAO,EAACe;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AACFd,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AADV,QAEFJ,QAAQ,EAFZ;AAGA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAC6B,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAoC;AACvDV,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AAD8C,KAApC,CAAvB;AAGEV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEkB,qBAAR;AAA+BjB,MAAAA,OAAO,EAAEG;AAAxC,KAAD,CAAR;AACL,GARD,CASA,OAAMO,KAAN,EAAY;AACR,UAAMG,OAAO,GACbH,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBU,OAAtC,GACIH,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBU,OADxB,GAEIH,KAAK,CAACG,OAHV;AAIAhB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,kBAAR;AAA4BO,MAAAA,OAAO,EAAEa;AAArC,KAAD,CAAR;AACH;AACJ,CAlBM","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_RESET,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n} from '../constants/orderConstants';\nexport const createOrder = (order) => async(dispatch,getState)=>{\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order})\n    try{\n        const {\n            userSignin: {userInfo}\n        } = getState();\n        const {data} = await Axios.post('/api/orders',order,{\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        });\n        dispatch({type:ORDER_CREATE_SUCCESS, payload:data.order})\n        dispatch({ type: CART_EMPTY });\n        localStorage.removeItem('cartItems');\n    } catch(error) {\n        dispatch({\n            type:ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.mesage ? error.response.data.mesage : error.message\n        })\n    }\n}\n\nexport const detailsOrder = (orderId)=>async(dispatch,getState)=>{\n    dispatch({type: ORDER_DETAILS_REQUEST,payload:orderId})\n    try{\n        const {\n            userSignin: {userInfo}\n        } = getState();\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n          });\n          dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    }\n    catch(error){\n        const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n    }\n}"]},"metadata":{},"sourceType":"module"}