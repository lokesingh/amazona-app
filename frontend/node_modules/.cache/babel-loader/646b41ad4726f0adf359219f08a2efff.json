{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cardReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nimport { productDetailsReducer, productListReducers } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDeails: orderDetailsReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/hp/Project/ecommerec-app/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","productDetailsReducer","productListReducers","userRegisterReducer","userSigninReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDeails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,0BAAxD;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,4BAA3D;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,yBAAvD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACNC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADM,GAEN;AAHI,GADK;AAMjBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAACL,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAmF,EAD5F;AAEDK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAA+F,EAF/G;AAGAM,IAAAA,aAAa,EAAE;AAHf;AANY,CAArB;AAaA,MAAMC,OAAO,GAAGpB,eAAe,CAAC;AAC5BqB,EAAAA,WAAW,EAACf,mBADgB;AAE5BgB,EAAAA,cAAc,EAAEjB,qBAFY;AAG5BW,EAAAA,IAAI,EAACd,WAHuB;AAI5BQ,EAAAA,UAAU,EAACF,iBAJiB;AAK5Be,EAAAA,YAAY,EAAChB,mBALe;AAM5BiB,EAAAA,WAAW,EAAErB,kBANe;AAO5BsB,EAAAA,WAAW,EAAErB;AAPe,CAAD,CAA/B;AAUA,MAAMsB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C9B,OAAvE;AACA,MAAM+B,KAAK,GAAGhC,WAAW,CAACuB,OAAD,EAASX,YAAT,EAAsBiB,eAAe,CAAC3B,eAAe,CAACE,KAAD,CAAhB,CAArC,CAAzB;AAEA,eAAe4B,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\n\nimport thunk from 'redux-thunk'\nimport { cartReducer } from './reducers/cardReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nimport { productDetailsReducer, productListReducers } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\n\nconst initialState = {\n    userSignin: {\n        userInfo: localStorage.getItem('userInfo')\n          ? JSON.parse(localStorage.getItem('userInfo'))\n          : null,\n      },\n    cart:{\n        cartItems:localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')): [],\n        shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')): {}\n        ,paymentMethod: 'PayPal'\n    }\n};\n\nconst reducer = combineReducers({\n    productList:productListReducers,\n    productDetails: productDetailsReducer,\n    cart:cartReducer,\n    userSignin:userSigninReducer,\n    userRegister:userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDeails: orderDetailsReducer,\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer,initialState,composeEnhancer(applyMiddleware(thunk)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}