{"ast":null,"code":"import Axios from 'axios';\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from '../constants/userConstants';\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/home/hp/Project/ecommerec-app/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA8CC,qBAA9C,EAAoEC,qBAApE,EAA0FC,kBAA1F,EAA8GC,mBAA9G,EAAmIC,YAAnI,QAAsJ,4BAAtJ;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB,MAAOC,QAAP,IAAmB;AACzDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV,mBAAP;AAA2BW,IAAAA,OAAO,EAAC;AAACJ,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAAnC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,mBAAX,EAA+B;AAACN,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA/B,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,mBAAN;AAA0BO,MAAAA,OAAO,EAACC;AAAlC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;AACH,GAJD,CAKA,OAAMM,KAAN,EAAY;AACRT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACX,gBAAN;AAAwBY,MAAAA,OAAO,EACpCO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AAHL,KAAD,CAAR;AAIH;AACJ,CAbM;AAcP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMf,KAAN,EAAaC,QAAb,KAAyB,MAAOC,QAAP,IAAmB;AAChEA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAET,qBAAP;AAA6BU,IAAAA,OAAO,EAAC;AAACJ,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,qBAAX,EAAiC;AAACS,MAAAA,IAAD;AAAMf,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAAjC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR,qBAAN;AAA4BS,MAAAA,OAAO,EAACC;AAApC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,mBAAN;AAA0BO,MAAAA,OAAO,EAACC;AAAlC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;AACH,GALD,CAMA,OAAMM,KAAN,EAAY;AACRT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACP,kBAAN;AAA0BQ,MAAAA,OAAO,EACtCO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AAHL,KAAD,CAAR;AAIH;AACJ,CAdM;AAgBP,OAAO,MAAMG,OAAO,GAAG,MAAOd,QAAD,IAAY;AACrCK,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAf,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL;AAAP,GAAD,CAAR;AACH,CAJM","sourcesContent":["import Axios from 'axios';\nimport {USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_REGISTER_FAIL, USER_SIGNIN_SUCCESS, USER_SIGNOUT} from '../constants/userConstants';\n\nexport const signin = (email, password)=> async (dispatch) =>{\n    dispatch({type: USER_SIGNIN_REQUEST,payload:{email,password}})\n    try{\n        const {data} = await Axios.post('/api/users/signin',{email,password});\n        dispatch({type:USER_SIGNIN_SUCCESS,payload:data})\n        localStorage.setItem('userInfo',JSON.stringify(data));\n    }\n    catch(error){\n        dispatch({type:USER_SIGNIN_FAIL, payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,})\n    }\n}\nexport const register = (name,email, password)=> async (dispatch) =>{\n    dispatch({type: USER_REGISTER_REQUEST,payload:{email,password}})\n    try{\n        const {data} = await Axios.post('/api/users/register',{name,email,password});\n        dispatch({type:USER_REGISTER_SUCCESS,payload:data})\n        dispatch({type:USER_SIGNIN_SUCCESS,payload:data})\n        localStorage.setItem('userInfo',JSON.stringify(data));\n    }\n    catch(error){\n        dispatch({type:USER_REGISTER_FAIL, payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,})\n    }\n}\n\nexport const signout = () => (dispatch)=>{\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    dispatch({type: USER_SIGNOUT});\n}"]},"metadata":{},"sourceType":"module"}